<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.gitee.define.mapper.RelateClientAuthorityMapper">
    <resultMap id="BaseResultMap" type="io.gitee.define.entity.RelateClientAuthority"
               extends="io.gitee.define.mapper.BaseModelMapper.BaseResultMap">
        <!--@Table ff_relate_client_authority-->
        <result column="client_id" property="clientId"/>
        <result column="authority_id" property="authorityId"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@sql select -->
        relate_client_authority.id, relate_client_authority.client_id, relate_client_authority.authority_id,
        relate_client_authority.`system`, relate_client_authority.`enable`, relate_client_authority.del,
        relate_client_authority.create_by, relate_client_authority.create_time, relate_client_authority.update_by,
        relate_client_authority.update_time, relate_client_authority.remark, relate_client_authority._version
        <!--@sql from ff_relate_client_authority relate_client_authority-->
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from ff_relate_client_authority relate_client_authority
        where id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete
        from ff_relate_client_authority
        where id = #{id}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="io.gitee.define.entity.RelateClientAuthority"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into ff_relate_client_authority (client_id, authority_id, `system`, `enable`, del, create_by,
                                                create_time,
                                                update_by, update_time, remark, _version)
        values (#{clientId}, #{authorityId}, #{system}, #{enable}, #{del}, #{createBy}, #{createTime},
                #{updateBy}, #{updateTime}, #{remark}, #{_version})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="io.gitee.define.entity.RelateClientAuthority" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into ff_relate_client_authority
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="clientId != null">
                client_id,
            </if>
            <if test="authorityId != null">
                authority_id,
            </if>
            <if test="system != null">
                `system`,
            </if>
            <if test="enable != null">
                `enable`,
            </if>
            <if test="del != null">
                del,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="_version != null">
                _version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="clientId != null">
                #{clientId},
            </if>
            <if test="authorityId != null">
                #{authorityId},
            </if>
            <if test="system != null">
                #{system},
            </if>
            <if test="enable != null">
                #{enable},
            </if>
            <if test="del != null">
                #{del},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
            <if test="_version != null">
                #{_version},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="io.gitee.define.entity.RelateClientAuthority">
        <!--@mbg.generated-->
        update ff_relate_client_authority
        <set>
            <if test="clientId != null">
                client_id = #{clientId},
            </if>
            <if test="authorityId != null">
                authority_id = #{authorityId},
            </if>
            <if test="system != null">
                `system` = #{system},
            </if>
            <if test="enable != null">
                `enable` = #{enable},
            </if>
            <if test="del != null">
                del = #{del},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="_version != null">
                _version = #{_version},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="io.gitee.define.entity.RelateClientAuthority">
        <!--@mbg.generated-->
        update ff_relate_client_authority
        set client_id    = #{clientId},
            authority_id = #{authorityId},
            `system`     = #{system},
            `enable`     = #{enable},
            del          = #{del},
            create_by    = #{createBy},
            create_time  = #{createTime},
            update_by    = #{updateBy},
            update_time  = #{updateTime},
            remark       = #{remark},
            _version     = #{_version}
        where id = #{id}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update ff_relate_client_authority
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="client_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.clientId}
                </foreach>
            </trim>
            <trim prefix="authority_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.authorityId}
                </foreach>
            </trim>
            <trim prefix="`system` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.system}
                </foreach>
            </trim>
            <trim prefix="`enable` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.enable}
                </foreach>
            </trim>
            <trim prefix="del = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.del}
                </foreach>
            </trim>
            <trim prefix="create_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.createBy}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.createTime}
                </foreach>
            </trim>
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.updateBy}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.updateTime}
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.remark}
                </foreach>
            </trim>
            <trim prefix="_version = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item._version}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update ff_relate_client_authority
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="client_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.clientId != null">
                        when id = #{item.id} then #{item.clientId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="authority_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.authorityId != null">
                        when id = #{item.id} then #{item.authorityId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`system` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.system != null">
                        when id = #{item.id} then #{item.system}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`enable` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.enable != null">
                        when id = #{item.id} then #{item.enable}
                    </if>
                </foreach>
            </trim>
            <trim prefix="del = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.del != null">
                        when id = #{item.id} then #{item.del}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createBy != null">
                        when id = #{item.id} then #{item.createBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createTime != null">
                        when id = #{item.id} then #{item.createTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateBy != null">
                        when id = #{item.id} then #{item.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateTime != null">
                        when id = #{item.id} then #{item.updateTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.remark != null">
                        when id = #{item.id} then #{item.remark}
                    </if>
                </foreach>
            </trim>
            <trim prefix="_version = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item._version != null">
                        when id = #{item.id} then #{item._version}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into ff_relate_client_authority
                (client_id, authority_id, `system`, `enable`, del, create_by, create_time, update_by,
                 update_time, remark, _version)
                values
        <foreach collection="list" item="item" separator=",">
            (#{item.clientId}, #{item.authorityId}, #{item.system}, #{item.enable}, #{item.del},
             #{item.createBy}, #{item.createTime}, #{item.updateBy}, #{item.updateTime}, #{item.remark},
             #{item._version})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id"
            parameterType="io.gitee.define.entity.RelateClientAuthority" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into ff_relate_client_authority
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            client_id,
            authority_id,
            `system`,
            `enable`,
            del,
            create_by,
            create_time,
            update_by,
            update_time,
            remark,
            _version,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            #{clientId},
            #{authorityId},
            #{system},
            #{enable},
            #{del},
            #{createBy},
            #{createTime},
            #{updateBy},
            #{updateTime},
            #{remark},
            #{_version},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id},
            </if>
            client_id    = #{clientId},
            authority_id = #{authorityId},
            `system`     = #{system},
            `enable`     = #{enable},
            del          = #{del},
            create_by    = #{createBy},
            create_time  = #{createTime},
            update_by    = #{updateBy},
            update_time  = #{updateTime},
            remark       = #{remark},
            _version     = #{_version},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="io.gitee.define.entity.RelateClientAuthority" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into ff_relate_client_authority
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="clientId != null">
                client_id,
            </if>
            <if test="authorityId != null">
                authority_id,
            </if>
            <if test="system != null">
                `system`,
            </if>
            <if test="enable != null">
                `enable`,
            </if>
            <if test="del != null">
                del,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="_version != null">
                _version,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="clientId != null">
                #{clientId},
            </if>
            <if test="authorityId != null">
                #{authorityId},
            </if>
            <if test="system != null">
                #{system},
            </if>
            <if test="enable != null">
                #{enable},
            </if>
            <if test="del != null">
                #{del},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
            <if test="_version != null">
                #{_version},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id},
            </if>
            <if test="clientId != null">
                client_id = #{clientId},
            </if>
            <if test="authorityId != null">
                authority_id = #{authorityId},
            </if>
            <if test="system != null">
                `system` = #{system},
            </if>
            <if test="enable != null">
                `enable` = #{enable},
            </if>
            <if test="del != null">
                del = #{del},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="_version != null">
                _version = #{_version},
            </if>
        </trim>
    </insert>
</mapper>