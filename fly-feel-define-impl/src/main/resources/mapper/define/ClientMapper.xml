<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.gitee.define.mapper.ClientMapper">
    <resultMap id="BaseResultMap" type="io.gitee.define.entity.Client"
               extends="io.gitee.define.mapper.BaseModelMapper.BaseResultMap">
        <!--@Table ff_client-->
        <result column="client_id" property="clientId"/>
        <result column="client_secret" property="clientSecret"/>
        <result column="redirect_uri" property="redirectUri"/>
        <result column="access_validity_seconds" property="accessValiditySeconds"/>
        <result column="refresh_validity_seconds" property="refreshValiditySeconds"/>
        <result column="scopes" property="scopes" typeHandler="io.gitee.define.handler.JacksonTypeHandler"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@sql select -->
        client.id,
        client.client_id,
        client.client_secret,
        client.redirect_uri,
        client.access_validity_seconds,
        client.refresh_validity_seconds,
        client.scopes,
        client.`system`,
        client.`enable`,
        client.del,
        client.create_by,
        client.create_time,
        client.update_by,
        client.update_time,
        client.remark,
        client._version
        <!--@sql from ff_client client-->
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ff_client client
        where id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from ff_client
        where id = #{id}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="io.gitee.define.entity.Client"
            useGeneratedKeys="true">
        insert into ff_client (client_id, client_secret, redirect_uri, access_validity_seconds,
                               refresh_validity_seconds, scopes,
                               `system`, `enable`, del, create_by, create_time, update_by, update_time,
                               remark, _version)
        values (#{clientId}, #{clientSecret}, #{redirectUri}, #{accessValiditySeconds}, #{refreshValiditySeconds},
                #{scopes,typeHandler=io.gitee.define.handler.JacksonTypeHandler}, #{system}, #{enable}, #{del}, #{createBy},
                #{createTime}, #{updateBy}, #{updateTime},
                #{remark}, #{_version})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="io.gitee.define.entity.Client"
            useGeneratedKeys="true">
        insert into ff_client
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="clientId != null">
                client_id,
            </if>
            <if test="clientSecret != null">
                client_secret,
            </if>
            <if test="redirectUri != null">
                redirect_uri,
            </if>
            <if test="accessValiditySeconds != null">
                access_validity_seconds,
            </if>
            <if test="refreshValiditySeconds != null">
                refresh_validity_seconds,
            </if>
            <if test="scopes != null and scopes.size() != 0">
                scopes,
            </if>
            <if test="system != null">
                `system`,
            </if>
            <if test="enable != null">
                `enable`,
            </if>
            <if test="del != null">
                del,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="_version != null">
                _version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="clientId != null">
                #{clientId},
            </if>
            <if test="clientSecret != null">
                #{clientSecret},
            </if>
            <if test="redirectUri != null">
                #{redirectUri},
            </if>
            <if test="accessValiditySeconds != null">
                #{accessValiditySeconds},
            </if>
            <if test="refreshValiditySeconds != null">
                #{refreshValiditySeconds},
            </if>
            <if test="scopes != null and scopes.size() != 0">
                #{scopes,typeHandler=io.gitee.define.handler.JacksonTypeHandler},
            </if>
            <if test="system != null">
                #{system},
            </if>
            <if test="enable != null">
                #{enable},
            </if>
            <if test="del != null">
                #{del},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
            <if test="_version != null">
                #{_version},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="io.gitee.define.entity.Client">
        update ff_client
        <set>
            <if test="clientId != null">
                client_id = #{clientId},
            </if>
            <if test="clientSecret != null">
                client_secret = #{clientSecret},
            </if>
            <if test="redirectUri != null">
                redirect_uri = #{redirectUri},
            </if>
            <if test="accessValiditySeconds != null">
                access_validity_seconds = #{accessValiditySeconds},
            </if>
            <if test="refreshValiditySeconds != null">
                refresh_validity_seconds = #{refreshValiditySeconds},
            </if>
            <if test="scopes != null and scopes.size() != 0">
                scopes = #{scopes,typeHandler=io.gitee.define.handler.JacksonTypeHandler},
            </if>
            <if test="system != null">
                `system` = #{system},
            </if>
            <if test="enable != null">
                `enable` = #{enable},
            </if>
            <if test="del != null">
                del = #{del},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="_version != null">
                _version = #{_version},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="io.gitee.define.entity.Client">
        update ff_client
        set client_id                = #{clientId},
            client_secret            = #{clientSecret},
            redirect_uri             = #{redirectUri},
            access_validity_seconds  = #{accessValiditySeconds},
            refresh_validity_seconds = #{refreshValiditySeconds},
            scopes                    = #{scopes,typeHandler=io.gitee.define.handler.JacksonTypeHandler},
            `system`                 = #{system},
            `enable`                 = #{enable},
            del                      = #{del},
            create_by                = #{createBy},
            create_time              = #{createTime},
            update_by                = #{updateBy},
            update_time              = #{updateTime},
            remark                   = #{remark},
            _version                 = #{_version}
        where id = #{id}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        update ff_client
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="client_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.clientId}
                </foreach>
            </trim>
            <trim prefix="client_secret = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.clientSecret}
                </foreach>
            </trim>
            <trim prefix="redirect_uri = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.redirectUri}
                </foreach>
            </trim>
            <trim prefix="access_validity_seconds = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.accessValiditySeconds}
                </foreach>
            </trim>
            <trim prefix="refresh_validity_seconds = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.refreshValiditySeconds}
                </foreach>
            </trim>
            <trim prefix="scopes = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.scopes,typeHandler=io.gitee.define.handler.JacksonTypeHandler}
                </foreach>
            </trim>
            <trim prefix="`system` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.system}
                </foreach>
            </trim>
            <trim prefix="`enable` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.enable}
                </foreach>
            </trim>
            <trim prefix="del = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.del}
                </foreach>
            </trim>
            <trim prefix="create_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.createBy}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.createTime}
                </foreach>
            </trim>
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.updateBy}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.updateTime}
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.remark}
                </foreach>
            </trim>
            <trim prefix="_version = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item._version}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        update ff_client
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="client_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.clientId != null">
                        when id = #{item.id} then #{item.clientId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="client_secret = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.clientSecret != null">
                        when id = #{item.id} then #{item.clientSecret}
                    </if>
                </foreach>
            </trim>
            <trim prefix="redirect_uri = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.redirectUri != null">
                        when id = #{item.id} then #{item.redirectUri}
                    </if>
                </foreach>
            </trim>
            <trim prefix="access_validity_seconds = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.accessValiditySeconds != null">
                        when id = #{item.id} then #{item.accessValiditySeconds}
                    </if>
                </foreach>
            </trim>
            <trim prefix="refresh_validity_seconds = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.refreshValiditySeconds != null">
                        when id = #{item.id} then #{item.refreshValiditySeconds}
                    </if>
                </foreach>
            </trim>
            <trim prefix="scopes = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.scopes != null">
                        when id = #{item.id} then #{item.scopes,typeHandler=io.gitee.define.handler.JacksonTypeHandler}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`system` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.system != null">
                        when id = #{item.id} then #{item.system}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`enable` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.enable != null">
                        when id = #{item.id} then #{item.enable}
                    </if>
                </foreach>
            </trim>
            <trim prefix="del = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.del != null">
                        when id = #{item.id} then #{item.del}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createBy != null">
                        when id = #{item.id} then #{item.createBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createTime != null">
                        when id = #{item.id} then #{item.createTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateBy != null">
                        when id = #{item.id} then #{item.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateTime != null">
                        when id = #{item.id} then #{item.updateTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.remark != null">
                        when id = #{item.id} then #{item.remark}
                    </if>
                </foreach>
            </trim>
            <trim prefix="_version = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item._version != null">
                        when id = #{item.id} then #{item._version}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        insert into ff_client
                (client_id, client_secret, redirect_uri, access_validity_seconds, refresh_validity_seconds, scopes,
                 `system`, `enable`, del, create_by, create_time, update_by, update_time, remark,
                 _version)
                values
        <foreach collection="list" item="item" separator=",">
            (#{item.clientId}, #{item.clientSecret}, #{item.redirectUri}, #{item.accessValiditySeconds},
             #{item.refreshValiditySeconds}, #{item.scopes,typeHandler=io.gitee.define.handler.JacksonTypeHandler},
             #{item.system}, #{item.enable}, #{item.del}, #{item.createBy},
             #{item.createTime}, #{item.updateBy}, #{item.updateTime}, #{item.remark}, #{item._version})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="io.gitee.define.entity.Client"
            useGeneratedKeys="true">
        insert into ff_client
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            client_id,
            client_secret,
            redirect_uri,
            access_validity_seconds,
            refresh_validity_seconds,
            scopes,
            `system`,
            `enable`,
            del,
            create_by,
            create_time,
            update_by,
            update_time,
            remark,
            _version,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            #{clientId},
            #{clientSecret},
            #{redirectUri},
            #{accessValiditySeconds},
            #{refreshValiditySeconds},
            #{scopes,typeHandler=io.gitee.define.handler.JacksonTypeHandler},
            #{system},
            #{enable},
            #{del},
            #{createBy},
            #{createTime},
            #{updateBy},
            #{updateTime},
            #{remark},
            #{_version},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id},
            </if>
            client_id                = #{clientId},
            client_secret            = #{clientSecret},
            redirect_uri             = #{redirectUri},
            access_validity_seconds  = #{accessValiditySeconds},
            refresh_validity_seconds = #{refreshValiditySeconds},
            scopes                    = #{scopes,typeHandler=io.gitee.define.handler.JacksonTypeHandler},
            `system`                 = #{system},
            `enable`                 = #{enable},
            del                      = #{del},
            create_by                = #{createBy},
            create_time              = #{createTime},
            update_by                = #{updateBy},
            update_time              = #{updateTime},
            remark                   = #{remark},
            _version                 = #{_version},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="io.gitee.define.entity.Client" useGeneratedKeys="true">
        insert into ff_client
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="clientId != null">
                client_id,
            </if>
            <if test="clientSecret != null">
                client_secret,
            </if>
            <if test="redirectUri != null">
                redirect_uri,
            </if>
            <if test="accessValiditySeconds != null">
                access_validity_seconds,
            </if>
            <if test="refreshValiditySeconds != null">
                refresh_validity_seconds,
            </if>
            <if test="scopes != null">
                scopes,
            </if>
            <if test="system != null">
                `system`,
            </if>
            <if test="enable != null">
                `enable`,
            </if>
            <if test="del != null">
                del,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="_version != null">
                _version,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="clientId != null">
                #{clientId},
            </if>
            <if test="clientSecret != null">
                #{clientSecret},
            </if>
            <if test="redirectUri != null">
                #{redirectUri},
            </if>
            <if test="accessValiditySeconds != null">
                #{accessValiditySeconds},
            </if>
            <if test="refreshValiditySeconds != null">
                #{refreshValiditySeconds},
            </if>
            <if test="scopes != null">
                #{scopes,typeHandler=io.gitee.define.handler.JacksonTypeHandler},
            </if>
            <if test="system != null">
                #{system},
            </if>
            <if test="enable != null">
                #{enable},
            </if>
            <if test="del != null">
                #{del},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
            <if test="_version != null">
                #{_version},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id},
            </if>
            <if test="clientId != null">
                client_id = #{clientId},
            </if>
            <if test="clientSecret != null">
                client_secret = #{clientSecret},
            </if>
            <if test="redirectUri != null">
                redirect_uri = #{redirectUri},
            </if>
            <if test="accessValiditySeconds != null">
                access_validity_seconds = #{accessValiditySeconds},
            </if>
            <if test="refreshValiditySeconds != null">
                refresh_validity_seconds = #{refreshValiditySeconds},
            </if>
            <if test="scopes != null">
                scopes = #{scopes,typeHandler=io.gitee.define.handler.JacksonTypeHandler},
            </if>
            <if test="system != null">
                `system` = #{system},
            </if>
            <if test="enable != null">
                `enable` = #{enable},
            </if>
            <if test="del != null">
                del = #{del},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="_version != null">
                _version = #{_version},
            </if>
        </trim>
    </insert>

    <select id="isExpires" resultType="java.lang.Boolean">
        select IF(#{_version} - client._version, 0, 1)
        from ff_client client
        where id = #{id}
    </select>
    <select id="isSystem" resultType="java.lang.Boolean">
        select IF(client.`system` = 0, 0, 1)
        from ff_client client
        where id = #{id}
    </select>
</mapper>