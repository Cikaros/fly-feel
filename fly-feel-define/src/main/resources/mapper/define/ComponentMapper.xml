<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.gitee.define.mapper.ComponentMapper">
    <resultMap id="BaseResultMap" type="io.gitee.define.entity.Component"
               extends="BaseModelMapper.BaseResultMap">
        <!--@Table ff_component-->
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="parent_id" property="parentId"/>
        <result column="path" property="path"/>
        <result column="component_type" property="componentType"/>
        <result column="component_path" property="componentPath"/>
        <result column="visible" property="visible"/>
        <result column="icon" property="icon"/>
        <result column="order" property="order"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@sql select -->
        component.id,
        component.`name`,
        component.description,
        component.parent_id,
        component.`path`,
        component.component_type,
        component.component_path,
        component.visible,
        component.icon,
        component.`order`,
        component.`system`,
        component.`enable`,
        component.del,
        component.create_by,
        component.create_time,
        component.update_by,
        component.update_time,
        component.remark,
        component._version
        <!--@sql from ff_component component-->
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ff_component component
        where id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from ff_component
        where id = #{id}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="io.gitee.define.entity.Component"
            useGeneratedKeys="true">
        insert into ff_component (`name`, description, parent_id, `path`, component_type, component_path,
                                  visible, icon, `order`, `system`, `enable`, del, create_by, create_time,
                                  update_by, update_time, remark, _version)
        values (#{name}, #{description}, #{parentId}, #{path}, #{componentType}, #{componentPath},
                #{visible}, #{icon}, #{order}, #{system}, #{enable}, #{del}, #{createBy}, #{createTime},
                #{updateBy}, #{updateTime}, #{remark}, #{_version})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="io.gitee.define.entity.Component" useGeneratedKeys="true">
        insert into ff_component
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="path != null">
                `path`,
            </if>
            <if test="componentType != null">
                component_type,
            </if>
            <if test="componentPath != null">
                component_path,
            </if>
            <if test="visible != null">
                visible,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="order != null">
                `order`,
            </if>
            <if test="system != null">
                `system`,
            </if>
            <if test="enable != null">
                `enable`,
            </if>
            <if test="del != null">
                del,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="_version != null">
                _version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name},
            </if>
            <if test="description != null">
                #{description},
            </if>
            <if test="parentId != null">
                #{parentId},
            </if>
            <if test="path != null">
                #{path},
            </if>
            <if test="componentType != null">
                #{componentType},
            </if>
            <if test="componentPath != null">
                #{componentPath},
            </if>
            <if test="visible != null">
                #{visible},
            </if>
            <if test="icon != null">
                #{icon},
            </if>
            <if test="order != null">
                #{order},
            </if>
            <if test="system != null">
                #{system},
            </if>
            <if test="enable != null">
                #{enable},
            </if>
            <if test="del != null">
                #{del},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
            <if test="_version != null">
                #{_version},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="io.gitee.define.entity.Component">
        update ff_component
        <set>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="path != null">
                `path` = #{path},
            </if>
            <if test="componentType != null">
                component_type = #{componentType},
            </if>
            <if test="componentPath != null">
                component_path = #{componentPath},
            </if>
            <if test="visible != null">
                visible = #{visible},
            </if>
            <if test="icon != null">
                icon = #{icon},
            </if>
            <if test="order != null">
                `order` = #{order},
            </if>
            <if test="system != null">
                `system` = #{system},
            </if>
            <if test="enable != null">
                `enable` = #{enable},
            </if>
            <if test="del != null">
                del = #{del},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="_version != null">
                _version = #{_version},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="io.gitee.define.entity.Component">
        update ff_component
        set `name`         = #{name},
            description    = #{description},
            parent_id      = #{parentId},
            `path`         = #{path},
            component_type = #{componentType},
            component_path = #{componentPath},
            visible        = #{visible},
            icon           = #{icon},
            `order`        = #{order},
            `system`       = #{system},
            `enable`       = #{enable},
            del            = #{del},
            create_by      = #{createBy},
            create_time    = #{createTime},
            update_by      = #{updateBy},
            update_time    = #{updateTime},
            remark         = #{remark},
            _version       = #{_version}
        where id = #{id}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        update ff_component
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="`name` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.name}
                </foreach>
            </trim>
            <trim prefix="description = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.description}
                </foreach>
            </trim>
            <trim prefix="parent_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.parentId}
                </foreach>
            </trim>
            <trim prefix="`path` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.path}
                </foreach>
            </trim>
            <trim prefix="component_type = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.componentType}
                </foreach>
            </trim>
            <trim prefix="component_path = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.componentPath}
                </foreach>
            </trim>
            <trim prefix="visible = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.visible}
                </foreach>
            </trim>
            <trim prefix="icon = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.icon}
                </foreach>
            </trim>
            <trim prefix="`order` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.order}
                </foreach>
            </trim>
            <trim prefix="`system` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.system}
                </foreach>
            </trim>
            <trim prefix="`enable` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.enable}
                </foreach>
            </trim>
            <trim prefix="del = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.del}
                </foreach>
            </trim>
            <trim prefix="create_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.createBy}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.createTime}
                </foreach>
            </trim>
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.updateBy}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.updateTime}
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.remark}
                </foreach>
            </trim>
            <trim prefix="_version = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item._version}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        update ff_component
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="`name` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.name != null">
                        when id = #{item.id} then #{item.name}
                    </if>
                </foreach>
            </trim>
            <trim prefix="description = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.description != null">
                        when id = #{item.id} then #{item.description}
                    </if>
                </foreach>
            </trim>
            <trim prefix="parent_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.parentId != null">
                        when id = #{item.id} then #{item.parentId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`path` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.path != null">
                        when id = #{item.id} then #{item.path}
                    </if>
                </foreach>
            </trim>
            <trim prefix="component_type = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.componentType != null">
                        when id = #{item.id} then #{item.componentType}
                    </if>
                </foreach>
            </trim>
            <trim prefix="component_path = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.componentPath != null">
                        when id = #{item.id} then #{item.componentPath}
                    </if>
                </foreach>
            </trim>
            <trim prefix="visible = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.visible != null">
                        when id = #{item.id} then #{item.visible}
                    </if>
                </foreach>
            </trim>
            <trim prefix="icon = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.icon != null">
                        when id = #{item.id} then #{item.icon}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`order` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.order != null">
                        when id = #{item.id} then #{item.order}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`system` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.system != null">
                        when id = #{item.id} then #{item.system}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`enable` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.enable != null">
                        when id = #{item.id} then #{item.enable}
                    </if>
                </foreach>
            </trim>
            <trim prefix="del = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.del != null">
                        when id = #{item.id} then #{item.del}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createBy != null">
                        when id = #{item.id} then #{item.createBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createTime != null">
                        when id = #{item.id} then #{item.createTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateBy != null">
                        when id = #{item.id} then #{item.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateTime != null">
                        when id = #{item.id} then #{item.updateTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.remark != null">
                        when id = #{item.id} then #{item.remark}
                    </if>
                </foreach>
            </trim>
            <trim prefix="_version = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item._version != null">
                        when id = #{item.id} then #{item._version}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        insert into ff_component
                (`name`, description, parent_id, `path`, component_type, component_path, visible,
                 icon, `order`, `system`, `enable`, del, create_by, create_time, update_by, update_time,
                 remark, _version)
                values
        <foreach collection="list" item="item" separator=",">
            (#{item.name}, #{item.description}, #{item.parentId}, #{item.path}, #{item.componentType},
             #{item.componentPath}, #{item.visible}, #{item.icon}, #{item.order}, #{item.system},
             #{item.enable}, #{item.del}, #{item.createBy}, #{item.createTime}, #{item.updateBy},
             #{item.updateTime}, #{item.remark}, #{item._version})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id"
            parameterType="io.gitee.define.entity.Component" useGeneratedKeys="true">
        insert into ff_component
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            `name`,
            description,
            parent_id,
            `path`,
            component_type,
            component_path,
            visible,
            icon,
            `order`,
            `system`,
            `enable`,
            del,
            create_by,
            create_time,
            update_by,
            update_time,
            remark,
            _version,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            #{name},
            #{description},
            #{parentId},
            #{path},
            #{componentType},
            #{componentPath},
            #{visible},
            #{icon},
            #{order},
            #{system},
            #{enable},
            #{del},
            #{createBy},
            #{createTime},
            #{updateBy},
            #{updateTime},
            #{remark},
            #{_version},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id},
            </if>
            `name`         = #{name},
            description    = #{description},
            parent_id      = #{parentId},
            `path`         = #{path},
            component_type = #{componentType},
            component_path = #{componentPath},
            visible        = #{visible},
            icon           = #{icon},
            `order`        = #{order},
            `system`       = #{system},
            `enable`       = #{enable},
            del            = #{del},
            create_by      = #{createBy},
            create_time    = #{createTime},
            update_by      = #{updateBy},
            update_time    = #{updateTime},
            remark         = #{remark},
            _version       = #{_version},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="io.gitee.define.entity.Component" useGeneratedKeys="true">
        insert into ff_component
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="path != null">
                `path`,
            </if>
            <if test="componentType != null">
                component_type,
            </if>
            <if test="componentPath != null">
                component_path,
            </if>
            <if test="visible != null">
                visible,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="order != null">
                `order`,
            </if>
            <if test="system != null">
                `system`,
            </if>
            <if test="enable != null">
                `enable`,
            </if>
            <if test="del != null">
                del,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="_version != null">
                _version,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="description != null">
                #{description},
            </if>
            <if test="parentId != null">
                #{parentId},
            </if>
            <if test="path != null">
                #{path},
            </if>
            <if test="componentType != null">
                #{componentType},
            </if>
            <if test="componentPath != null">
                #{componentPath},
            </if>
            <if test="visible != null">
                #{visible},
            </if>
            <if test="icon != null">
                #{icon},
            </if>
            <if test="order != null">
                #{order},
            </if>
            <if test="system != null">
                #{system},
            </if>
            <if test="enable != null">
                #{enable},
            </if>
            <if test="del != null">
                #{del},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
            <if test="_version != null">
                #{_version},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id},
            </if>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="path != null">
                `path` = #{path},
            </if>
            <if test="componentType != null">
                component_type = #{componentType},
            </if>
            <if test="componentPath != null">
                component_path = #{componentPath},
            </if>
            <if test="visible != null">
                visible = #{visible},
            </if>
            <if test="icon != null">
                icon = #{icon},
            </if>
            <if test="order != null">
                `order` = #{order},
            </if>
            <if test="system != null">
                `system` = #{system},
            </if>
            <if test="enable != null">
                `enable` = #{enable},
            </if>
            <if test="del != null">
                del = #{del},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="_version != null">
                _version = #{_version},
            </if>
        </trim>
    </insert>
    <select id="isExpires" resultType="java.lang.Boolean">
        select IF(#{_version} - component._version, 0, 1)
        from ff_component component
        where id = #{id}
    </select>
    <select id="isSystem" resultType="java.lang.Boolean">
        select IF(component.`system` = 0, 0, 1)
        from ff_component component
        where id = #{id}
    </select>
</mapper>